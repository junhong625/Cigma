server {
    server_name cigmacode.com www.cigmacode.com;

    root /app/dist;

    index index.html index.htm;
    underscores_in_headers on;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api {

        if ($request_method = OPTIONS) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Allow-Credentials true;
            return 200;
        }

        proxy_hide_header Access-Control-Allow-Origin; # 헤더 세팅 권한 가져오기
        add_header 'Access-Control-Allow-Origin' "*" always;  # CORS 허용
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        rewrite ^ $uri break;
        proxy_pass http://k8a601.p.ssafy.io:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header accept "application/json";
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_http_version 1.1;

        charset utf-8;
    }

    # location / {
        # proxy_pass http://127.0.0.1:3000;
        # proxy_http_version  1.1; // HTTP 프로토콜 버전 정의
        # proxy_cache_bypass  $http_upgrade; 

        # proxy_set_header Upgrade           $http_upgrade; // 캐시에서 응답을 가져오지 않을 조건을 설정
        # proxy_set_header Connection        "upgrade"; // 응용프로그램이 웹 소켓을 사용하는 경우 헤더 필드
        # proxy_set_header Host              $host; // 다음 우선 순위의 $host 변수에는 요청 라인의 호스트 이름 또는 호스트 요청 헤더 필드의 호스트 이름 또는 요청과 일치하는 서버 이름이 포함됩니다.
        # proxy_set_header X-Real-IP         $remote_addr; // 실제 방문자 원격 IP 주소를 프록시 서버로 전달합니다.
        # proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for; // 클라이언트가 프록시 처리한 모든 서버의 IP 주소를 포함하는 목록입니다.
        # proxy_set_header X-Forwarded-Proto $scheme; // HTTPS 서버 블록 내에서 사용할 경우 프록시 서버의 각 HTTP 응답이 HTTPS로 다시 작성됩니다.
        # proxy_set_header X-Forwarded-Host  $host; // 클라이언트가 요청한 원래 호스트를 정의합니다.
        # proxy_set_header X-Forwarded-Port  $server_port // 클라이언트가 요청한 원래 포트를 정의합니다.
    # }

    
    location /.well-known/acme-challenge {
        root /var/lib/letsencrypt/;
    }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cigmacode.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cigmacode.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.cigmacode.com) {
        return 301 https://$host$request_uri;
    }

    if ($host = cigmacode.com) {
        return 301 https://$host$request_uri;
    }

    server_name cigmacode.com www.cigmacode.com;

    listen 80;
    return 404;
}